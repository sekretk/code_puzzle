{"version":3,"sources":["utils.js","DraggableList.js","NonDraggableList.js","Result.js","About.js","reasons.js","App.jsx","index.js"],"names":["selectMapper","true","item","id","commented","false","url","SortableItem","sortableElement","_ref","value","onToggle","line","react_default","a","createElement","className","onMouseDown","Boolean","SortableContainer","sortableContainer","_ref2","children","DraggableList","_ref3","items","multiple","onItemsChanged","_useState","useState","_useState2","Object","slicedToArray","itemsVal","setItems","concat","onSortEnd","_ref4","oldIndex","newIndex","result","arrayMoveImmutable","useWindowAsScrollContainer","map","index","key","objectSpread","UngraggableItem","NonDraggableList","NonDraggableList_UngraggableItem","console","log","Result","links","text","Fragment","msg","link","href","target","window","localStorage","setItem","alt","src","width","height","onClick","location","reload","reasons","listPresenter","props","addReasonToLocalStorage","reason","JSON","stringify","parse","getItem","defineProperty","App","question","poll","description","blocks","sortable","undefined","setResult","_useState3","_useState4","incorrect","setIncorrect","_useState5","_useState6","setReason","_useState7","_useState8","achieve","setAchieve","needAbout","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","content","_reason","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","body","lines","filter","block","sent","Math","floor","random","length","keys","stop","apply","this","arguments","useEffect","NotificationManager","success","onNext","_useState9","sort","_useState10","list","timeout","setTimeout","clearTimeout","removeItem","About_Result","lib","swapInArray","arr","idx1","idx2","toConsumableArray","res","allPolls","listOfPolls","fetchedQuestion","pathname","replace","json","render","document","getElementById","abrupt"],"mappings":"iQAAaA,EAAe,CACxBC,KAAM,SAACC,EAAMC,GAAP,OAAcD,EAAKC,KAAOA,GAAMD,EAAKE,UAAYF,EAAKE,WAC5DC,MAAO,SAACH,EAAMC,GAAP,OAAcD,EAAKC,KAAOA,IAGxBG,EAAM,6BCCbC,EAAeC,YAAgB,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,SACnCC,EAAoBF,EAApBE,KAAMR,EAAcM,EAAdN,UACd,OAAQS,EAAAC,EAAAC,cAAA,MAAIC,UAAWZ,EAAY,YAAc,IAC7CS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAAeC,YAAaN,GAA9C,MAEIO,QAAQd,GAEAS,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAA6BJ,IAGhDC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAA6BJ,GAEpDC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,+CAAhB,sBAONG,EAAoBC,YAAkB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAC3C,OAAOT,EAAAC,EAAAC,cAAA,UAAKO,KAGD,SAASC,EAATC,GAA4D,IAAnCC,EAAmCD,EAAnCC,MAAOC,EAA4BF,EAA5BE,SAAUC,EAAkBH,EAAlBG,eAAkBC,EAE1CC,mBAASJ,GAFiCK,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEhEK,EAFgEH,EAAA,GAEtDI,EAFsDJ,EAAA,GAgBvE,OACIjB,EAAAC,EAAAC,cAAA,OAAKC,UAAS,WAAAmB,OAAaT,GAAY,aACnCb,EAAAC,EAAAC,cAACI,EAAD,CAAmBiB,UAdT,SAAAC,GAA4B,IAAzBC,EAAyBD,EAAzBC,SAAUC,EAAeF,EAAfE,SACrBC,EAASC,YAAmBR,EAAUK,EAAUC,GACtDL,EAASM,GACTb,EAAea,IAW8BE,4BAA4B,GAChET,EAASU,IAAI,SAACjC,EAAOkC,GAAR,OACV/B,EAAAC,EAAAC,cAACR,EAAD,CAAcsC,IAAG,QAAAV,OAAUzB,EAAMP,IAAMyC,MAAOA,EAAOlC,MAAOA,EAAOC,UAV7DR,EAUoFO,EAAMP,GAVnF,WACzB,IAAMqC,EAASP,EAASU,IAAI,SAACzC,GAAD,OAAA6B,OAAAe,EAAA,EAAAf,CAAA,GAAgB7B,EAAhB,CAAsBE,UAAWJ,EAAa0B,GAAUxB,EAAMC,OAC1F+B,EAASM,GACTb,EAAea,OAHE,IAACrC,MCtC1B,IAAM4C,EAAkB,SAAAtC,GAAyB,IAAtBC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,SACtBC,EAAoBF,EAApBE,KAAMR,EAAcM,EAAdN,UACd,OAAQS,EAAAC,EAAAC,cAAA,MAAIC,UAAWZ,EAAY,YAAc,IAC7CS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUC,YAAaN,GAAzC,MAEIO,QAAQd,GAEAS,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBJ,IAGrCC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBJ,MAMtC,SAASoC,EAAT3B,GAA+D,IAAnCI,EAAmCJ,EAAnCI,MAAOC,EAA4BL,EAA5BK,SAAUC,EAAkBN,EAAlBM,eAAkBC,EAE7CC,mBAASJ,GAFoCK,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEnEK,EAFmEH,EAAA,GAEzDI,EAFyDJ,EAAA,GAW1E,OACIjB,EAAAC,EAAAC,cAAA,MAAIC,UAAS,eAAAmB,OAAiBT,GAAY,aACrCO,EAASU,IAAI,SAAAzC,GAAI,OACdW,EAAAC,EAAAC,cAACkC,EAAD,CAAiBJ,IAAG,QAAAV,OAAUjC,EAAKC,IAAMO,MAAOR,EAAMS,UAV5CR,EAUmED,EAAKC,GAVjE,WACzB,IAAMqC,EAASP,EAASU,IAAI,SAACzC,GAAD,OAAA6B,OAAAe,EAAA,EAAAf,CAAA,GAAgB7B,EAAhB,CAAsBE,UAAWJ,EAAa0B,GAAUxB,EAAMC,OAC1F+B,EAASM,GACTU,QAAQC,IAAIX,GACZb,EAAea,OAJE,IAACrC,KCvBX,SAASiD,EAAT3C,GAAiC,IAAf4C,EAAe5C,EAAf4C,MAAOC,EAAQ7C,EAAR6C,KAEpC,OACIzC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KACI1C,EAAAC,EAAAC,cAAA,4CACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAasC,GAC1BzC,EAAAC,EAAAC,cAAA,UAEQsC,EAAMV,IAAI,SAAAtB,EAAsBuB,GAAtB,IAASY,EAATnC,EAAGiC,KAAWG,EAAdpC,EAAcoC,KAAd,OACN5C,EAAAC,EAAAC,cAAA,MAAI8B,IAAKD,GAAQ/B,EAAAC,EAAAC,cAAA,KAAG2C,KAAMD,EAAME,OAAO,UAAUH,OAI7D3C,EAAAC,EAAAC,cAAA,2YAA4EF,EAAAC,EAAAC,cAAA,KAAG2C,KAAK,oFAAoFC,OAAO,UAAnG,sBAA5E,0JCbG,SAASP,EAAT3C,GAAiCA,EAAf4C,MAAe5C,EAAR6C,KAEpCM,OAAOC,aAAaC,QAAQ,cAAc,GAM1C,OACIjD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KACI1C,EAAAC,EAAAC,cAAA,KAAG2C,KAAK,+BACJ7C,EAAAC,EAAAC,cAAA,OAAKgD,IAAI,iBAAiBC,IAAI,mBAC1BC,MAAM,MAAMC,OAAO,QAG3BrD,EAAAC,EAAAC,cAAA,sJACAF,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAG2C,KAAK,2CAA2CC,OAAO,UAA1D,0MACH9C,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,KAAG2C,KAAK,mEAAmEC,OAAO,UAAlF,8EAEH9C,EAAAC,EAAAC,cAAA,WAVJ,KAWIF,EAAAC,EAAAC,cAAA,kFACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,SAAb,uMACwCH,EAAAC,EAAAC,cAAA,WADxC,0KAEoCF,EAAAC,EAAAC,cAAA,WAFpC,4LAGuCF,EAAAC,EAAAC,cAAA,WAHvC,yVAIuEF,EAAAC,EAAAC,cAAA,WAJvE,8rCAKgPF,EAAAC,EAAAC,cAAA,WALhP,yMASAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDAAhB,QADJ,+IAOAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBACZH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDAAhB,iBADJ,iHAOAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,KAAKmD,QAxClB,WACTP,OAAOQ,SAASC,WAuCZ,0CC9CL,IAAMC,EAAU,CACnB,6GACA,yFACA,sLACA,mMACA,kBACA,0QACA,oMACA,+EACA,kZACA,iXCCEC,SAAgB,CACpBtE,KAAM,SAACuE,GAAD,OAAW3D,EAAAC,EAAAC,cAACQ,EAAkBiD,IACpCnE,MAAO,SAACmE,GAAD,OAAW3D,EAAAC,EAAAC,cAACiC,EAAqBwB,MAGpCC,EAA0B,SAAAC,GAAM,OAAId,OAAOC,aAAaC,QAAQ,UAAWa,KAAKC,UAAL7C,OAAAe,EAAA,EAAAf,CAAA,GAAoB4C,KAAKE,MAAMjB,OAAOC,aAAaiB,QAAQ,YAA3D/C,OAAAgD,EAAA,EAAAhD,CAAA,GAAyE2C,EAAS,OAEpJ,SAASM,EAAIC,GAAU,IAGlCC,EAMED,EANFC,KACAC,EAKEF,EALFE,YACAC,EAIEH,EAJFG,OACA1D,EAGEuD,EAHFvD,SACA2D,EAEEJ,EAFFI,SACAlF,EACE8E,EADF9E,GARkCyB,EAWRC,wBAASyD,GAXDxD,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAW7BY,EAX6BV,EAAA,GAWrByD,EAXqBzD,EAAA,GAAA0D,EAaF3D,oBAAS,GAbP4D,EAAA1D,OAAAC,EAAA,EAAAD,CAAAyD,EAAA,GAa7BE,EAb6BD,EAAA,GAalBE,EAbkBF,EAAA,GAAAG,EAeR/D,wBAASyD,GAfDO,EAAA9D,OAAAC,EAAA,EAAAD,CAAA6D,EAAA,GAe7BlB,EAf6BmB,EAAA,GAerBC,EAfqBD,EAAA,GAAAE,EAiBNlE,wBAASyD,GAjBHU,EAAAjE,OAAAC,EAAA,EAAAD,CAAAgE,EAAA,GAiB7BE,EAjB6BD,EAAA,GAiBpBE,EAjBoBF,EAAA,GAmB9BG,GAAajF,QAAQ0C,OAAOC,aAAaiB,QAAQ,eAgBjDsB,EAAQ,eAAA3F,EAAAsB,OAAAsE,EAAA,EAAAtE,CAAAuE,EAAAxF,EAAAyF,KAAG,SAAAC,IAAA,IAAAC,EAAAnD,EAAAoD,EAAAC,EAAA,OAAAL,EAAAxF,EAAA8F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAEWC,MAAM1G,EAAM,WAAa4E,EAAM,CACvD+B,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAM1C,KAAKC,UAAU,CACnBK,SAAU9E,EACVmH,MAAOrF,EAASsF,OAAO,SAAAC,GAAK,OAAKA,EAAMpH,YAAWuC,IAAI,SAAA6E,GAAK,OAAIA,EAAMrH,SAV1D,cAETsG,EAFSI,EAAAY,KAAAZ,EAAAE,KAAA,EAcIN,EAAYnD,OAdhB,OAcTA,EAdSuD,EAAAY,KAgBTf,EAAUxF,QAAQoC,GAAQqB,KAAKE,MAAMvB,QAAQgC,EAEnDC,EAAUmB,GAEVf,GAAczE,QAAQwF,IAEjBA,IACGhC,EAASJ,EAAQoD,KAAKC,MAAMD,KAAKE,SAAWtD,EAAQuD,SAC1D/B,EAAUpB,GACVD,EAAwBC,GAtCR3C,OAAO+F,KAAKnD,KAAKE,MAAMjB,OAAOC,aAAaiB,QAAQ,aACvD+C,SAAWvD,EAAQuD,QAAWjE,OAAOC,aAAaiB,QAAQ,YACtElB,OAAOC,aAAaC,QAAQ,UAAW,KAKM,MAA3CF,OAAOC,aAAaiB,QAAQ,aAC9BoB,EAAW,CAAE5C,KAAM,mDAAY6B,YAAa,oUAC5CvB,OAAOC,aAAaC,QAAQ,UAAW,OAI1B,yBAAA+C,EAAAkB,SAAAvB,MAAH,yBAAA/F,EAAAuH,MAAAC,KAAAC,YAAA,GA+BdC,oBAAU,WACJlC,GACFmC,sBAAoBC,QAAQpC,EAAQd,YAAac,EAAQ3C,OAE1D2C,GAEH,IAAMqC,EAAS,WACb1E,OAAOQ,SAASC,UAGZ5C,EAAQC,EACV0D,EAAOzC,IAAI,SAAA6E,GAAK,OAAAzF,OAAAe,EAAA,EAAAf,CAAA,GAAUyF,EAAV,CAAiBpH,UAAWsH,KAAKE,SAAW,OAC5DxC,EAAOzC,IAAI,SAAA6E,GAAK,OAAAzF,OAAAe,EAAA,EAAAf,CAAA,GAAUyF,EAAV,CAAiBpH,UAAWoH,IAAUpC,EAAO,OA9E7BmD,EAgFP1G,mBAASJ,EAAM+G,KAAK,kBAAOd,KAAKE,SAAW,GAAM,GAAK,KAhF/Ca,EAAA1G,OAAAC,EAAA,EAAAD,CAAAwG,EAAA,GAgF7BtG,EAhF6BwG,EAAA,GAgFnBvG,EAhFmBuG,EAAA,GAkF9BC,EAAOnE,EAAcc,GAAU,CAAE5D,QAAOE,eAAgBO,EAAUR,aAkBxE,OAXAyG,oBAAU,WACR,GAAIzC,EAAW,CACb,IAAMiD,EAAUC,WAAW,WACzBjD,GAAa,IACZ,KAEH,OAAO,kBAAMkD,aAAaF,MAG1B,CAACjD,IAGH7E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAyC,SAAA,KACE1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAEXE,QAAQmE,IACRxE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDAAhB,SAMFE,QAAQQ,IACRb,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qDAAhB,kBAKJH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOmD,QAnCX,WAClBP,OAAOC,aAAaiF,WAAW,cAC/BlF,OAAOQ,SAASC,WAiCZ,+CAEFxD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBmE,GACtCtE,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOmD,QAASmE,GAAlC,wCACAzH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,SAASmD,QAASiC,GAApC,0DACAvF,EAAAC,EAAAC,cAAA,OAAKC,UAAS,SAAAmB,OAAWuD,EAAY,cAAgB,iBACnD7E,EAAAC,EAAAC,cAAA,cAAS2D,IAITgE,EAGAxH,QAAQsB,IAAW3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAChCH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAAOmD,QAASmE,GAAlC,wCACAzH,EAAAC,EAAAC,cAACqC,EAAWZ,IAIdtB,QAAQiF,IAActF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACnCH,EAAAC,EAAAC,cAACgI,EAAD,OAIJlI,EAAAC,EAAAC,cAACiI,EAAA,sBAAD,iDC3JC,IAAMC,EAAc,SAACC,EAAKC,EAAMC,GACrC,IAAM5G,EAAMT,OAAAsH,EAAA,EAAAtH,CAAOmH,GAD2BzI,EAEf,CAACyI,EAAIE,GAAOF,EAAIC,IAC/C,OADC3G,EAAO2G,GAFsC1I,EAAA,GAE/B+B,EAAO4G,GAFwB3I,EAAA,GAGvC+B,GAGTT,OAAAsE,EAAA,EAAAtE,CAAAuE,EAAAxF,EAAAyF,KAAC,SAAAC,IAAA,IAAAtB,EAAAoE,EAAAC,EAAAC,EAAAC,EAAAxE,EAAA,OAAAqB,EAAAxF,EAAA8F,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEO7B,EAAOtB,OAAOQ,SAASsF,SAASC,QAAQ,IAAK,IAE9CzI,QAAQgE,GAJd,CAAA2B,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKqBC,MAAM1G,EAAM,UALjC,cAKSgJ,EALTzC,EAAAY,KAAAZ,EAAAE,KAAA,EAM0BuC,EAAIM,OAN9B,cAMSL,EANT1C,EAAAY,KAOS+B,EAAe3I,EAAAC,EAAAC,cAAA,UAClBwI,EAAS5G,IAAI,SAACuC,GAAD,OAAUrE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAG2C,KAAMwB,GAAOA,OAE9C2E,iBAAOL,EAAaM,SAASC,eAAe,SAV/ClD,EAAAmD,OAAA,yBAAAnD,EAAAE,KAAA,GAc+BC,MAAM1G,EAAM,YAAY4E,GAdvD,eAcOuE,EAdP5C,EAAAY,KAAAZ,EAAAE,KAAA,GAgBsB0C,EAAgBG,OAhBtC,QAgBK3E,EAhBL4B,EAAAY,KAkBCxC,EAAQlD,OAAAe,EAAA,EAAAf,CAAA,GAAOkD,EAAP,CAAiBC,SAEzB2E,iBAAOhJ,EAAAC,EAAAC,cAACiE,EAAQC,GAAa6E,SAASC,eAAe,SApBtD,yBAAAlD,EAAAkB,SAAAvB,KAADzE","file":"static/js/main.061bdcff.chunk.js","sourcesContent":["export const selectMapper = {\n    true: (item, id) => item.id === id ? !item.commented : item.commented,\n    false: (item, id) => item.id !== id\n}\n\nexport const url = 'http://boysthings.top:9999';\n//export const url = 'http://localhost:9999';","import React, { Component, useEffect, useState } from 'react';\nimport { render } from 'react-dom';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable } from 'array-move';\nimport { selectMapper } from './utils'\n\nconst SortableItem = sortableElement(({ value, onToggle }) => {\n    const { line, commented } = value;\n    return (<li className={commented ? 'commented' : ''}>\n        <div className=\"item content__item\">\n            <button className=\"comment code\" onMouseDown={onToggle}>//</button>\n            {\n                Boolean(commented)\n                    ? (\n                        <strike>\n                            <p className=\"multiline item__code code\">{line}</p>\n                        </strike>\n                    )\n                    : <p className=\"multiline item__code code\">{line}</p>\n            }\n            <span className=\"drag material-icons material-icons-outlined\">\n                drag_indicator\n            </span>\n        </div>\n    </li>)\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n    return <ul>{children}</ul>;\n});\n\nexport default function DraggableList({ items, multiple, onItemsChanged }) {\n\n    const [itemsVal, setItems] = useState(items);\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        const result = arrayMoveImmutable(itemsVal, oldIndex, newIndex);\n        setItems(result);\n        onItemsChanged(result);\n    };\n\n    const onItemToggle = (id) => () => {\n        const result = itemsVal.map((item) => ({ ...item, commented: selectMapper[multiple](item, id) }));\n        setItems(result);\n        onItemsChanged(result);\n    }\n\n    return (\n        <div className={`content ${multiple && 'multiple'}`}>\n            <SortableContainer onSortEnd={onSortEnd} useWindowAsScrollContainer={true}>\n                {itemsVal.map((value, index) => (\n                    <SortableItem key={`item-${value.id}`} index={index} value={value} onToggle={onItemToggle(value.id)} />\n                ))}\n            </SortableContainer>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { selectMapper } from './utils'\n\nconst UngraggableItem = ({ value, onToggle }) => {\n    const { line, commented } = value;\n    return (<li className={commented ? 'commented' : ''}>\n        <div className=\"item\">\n            <button className=\"comment\" onMouseDown={onToggle}>//</button>\n            {\n                Boolean(commented)\n                    ? (\n                        <strike>\n                            <p className=\"multiline code\">{line}</p>\n                        </strike>\n                    )\n                    : <p className=\"multiline code\">{line}</p>\n            }\n        </div>\n    </li>)\n};\n\nexport default function NonDraggableList({ items, multiple, onItemsChanged }) {\n\n    const [itemsVal, setItems] = useState(items);\n\n    const onItemToggle = (id) => () => {\n        const result = itemsVal.map((item) => ({ ...item, commented: selectMapper[multiple](item, id) }));\n        setItems(result);\n        console.log(result)\n        onItemsChanged(result);\n    }\n\n    return (\n        <ul className={`undraggable ${multiple && 'multiple'}`}>\n            {itemsVal.map(item => (\n                <UngraggableItem key={`item-${item.id}`} value={item} onToggle={onItemToggle(item.id)} />))}\n        </ul>\n    );\n}\n","import React from 'react';\n\nexport default function Result({ links, text }) {\n\n    return (\n        <>\n            <p>Верно!</p>\n            <p className=\"multiline\">{text}</p>\n            <ul>\n                {\n                    links.map(({ text: msg, link }, index) => (\n                        <li key={index} ><a href={link} target=\"_blank\">{msg}</a></li>\n                    ))\n                }\n            </ul>\n            <p>Поучаствуй в розыгрыше ватрушки для зимних катаний! Оставь свои контакты <a href=\"https://docs.google.com/forms/d/1_qOo9r05XTCCKvgIGJChXD3FlPAzOBLYdkxjxsJb55U/edit\" target=\"_blank\">Тут</a> и жди результатов сегодня в 19:00</p>\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function Result({ links, text }) {\n\n    window.localStorage.setItem('acquainted', true);\n\n    const onGo = () => {\n        window.location.reload();\n    }\n\n    return (\n        <>\n            <a href=\"https://www.devexperts.com/\">\n                <img alt=\"devexperts.com\" src=\"/static/logo.svg\"\n                    width=\"150\" height=\"30\" />\n            </a>\n\n            <p>Международная карьера в Fintech:</p>\n            <p><a href=\"https://devexperts.com/about-devexperts/\" target=\"_blank\">Подробнее о наших продуктах и команде</a></p>\n            <p><a href=\"https://careers.devexperts.com/vacancies/?country=ru&remote=true\" target=\"_blank\">Наши вакансии</a></p>\n\n            <br />\\\n            <h3>Правила игры:</h3>\n            <p className=\"rules\">\n                Приложение предлагает решить задачу.<br/>\n                Для пропуска нужно начать Далее.<br/>\n                Для отправки на проверку Отправить.<br/>\n                Для комментирования/раскомментирования строки нужно нажать на \"//\".<br/>\n                На основе фидбэка от 5 минутного тестирования нужно добавить что вы получаете ВСЕГДА случайное задание - так что жмите Далее если уже решали. И при старте закомментированы случайный элементы - не позволяйте этому выбору повлиять на вас!<br/>\n                Допустимы следующие флаги на задачах:\n            </p>\n\n            <span className=\"badge sort\">\n                <span className=\"badge_icon material-icons material-icons-outlined\">\n                    sort\n                </span>\n                Необходимо отсортировать\n            </span>\n\n            <span className=\"badge multiple\">\n                <span className=\"badge_icon material-icons material-icons-outlined\">\n                    checklist_rtl\n                </span>\n                Несколько вариантов\n            </span>\n\n            <button className=\"go\" onClick={onGo}>Начать!</button>\n        </>\n    );\n}\n","export const reasons = [\n    'Извините, не принято!',\n    'Попробуй еще раз',\n    'Сервер сказал, что это неправильно',\n    'Попытка не пытка, но пока неправильно',\n    'Never get back!',\n    'Ты должен был бороться со злом, а не примкнуть к нему',\n    'Мы всей командой верим, что ты сможешь',\n    'Мы в тебя верим!',\n    'Путь в тысячу миль начинается с первого шага. Так уж вышло, что он неправильный',\n    'У самурая нет цели, у него есть только путь. На своем ты совершил ошибку'\n];","import DraggableList from './DraggableList'\nimport NonDraggableList from './NonDraggableList'\nimport Result from './Result'\nimport About from './About'\nimport React, { useState, useEffect } from 'react';\nimport { url } from './utils';\nimport { reasons } from './reasons';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\n\nimport 'react-notifications/dist/react-notifications.css';\n\nconst listPresenter = {\n  true: (props) => <DraggableList {...props} />,\n  false: (props) => <NonDraggableList {...props} />,\n}\n\nconst addReasonToLocalStorage = reason => window.localStorage.setItem('reasons', JSON.stringify({ ...JSON.parse(window.localStorage.getItem('reasons')), [reason]: 1 }));\n\nexport default function App(question) {\n\n  const {\n    poll,\n    description,\n    blocks,\n    multiple,\n    sortable,\n    id\n  } = question;\n\n  const [result, setResult] = useState(undefined);\n\n  const [incorrect, setIncorrect] = useState(false);\n\n  const [reason, setReason] = useState(undefined);\n\n  const [achieve, setAchieve] = useState(undefined);\n\n  const needAbout = !Boolean(window.localStorage.getItem('acquainted'));\n\n  const checkForAchieve = () => {\n    const lsReasons = Object.keys(JSON.parse(window.localStorage.getItem('reasons')));\n    if (lsReasons.length === reasons.length && !window.localStorage.getItem('achieve')) {\n      window.localStorage.setItem('achieve', '1');\n    }\n  };\n\n  const showAchieve = () => {\n    if (window.localStorage.getItem('achieve') === '1') {\n      setAchieve({ text: 'Упорство', description: 'Тебе удалось раздобыть все сообщения о неправильных ответах' })\n      window.localStorage.setItem('achieve', '0');\n    }\n  };\n\n  const onSubmit = async () => {\n\n    const rawResponse = await fetch(url + '/result/' + poll, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        question: id,\n        lines: itemsVal.filter(block => !block.commented).map(block => block.id)\n      })\n    });\n\n    const text = await rawResponse.text();\n\n    const content = Boolean(text) ? JSON.parse(text) : undefined;\n\n    setResult(content);\n\n    setIncorrect(!Boolean(content))\n\n    if (!content) {\n      const reason = reasons[Math.floor(Math.random() * reasons.length)]\n      setReason(reason);\n      addReasonToLocalStorage(reason);\n      checkForAchieve();\n      showAchieve();\n    }\n  }\n\n  useEffect(() => {\n    if (achieve) {\n      NotificationManager.success(achieve.description, achieve.text);\n    }\n  }, achieve);\n\n  const onNext = () => {\n    window.location.reload();\n  }\n\n  const items = multiple\n    ? blocks.map(block => ({ ...block, commented: Math.random() < 0.5 }))\n    : blocks.map(block => ({ ...block, commented: block !== blocks[0] }));\n\n  const [itemsVal, setItems] = useState(items.sort(() => (Math.random() > .5) ? 1 : -1));\n\n  const list = listPresenter[sortable]({ items, onItemsChanged: setItems, multiple });\n\n  const onNeedAbout = () => {\n    window.localStorage.removeItem('acquainted');\n    window.location.reload();\n  }\n\n  useEffect(() => {\n    if (incorrect) {\n      const timeout = setTimeout(() => {\n        setIncorrect(false);\n      }, 1000);\n\n      return () => clearTimeout(timeout)\n    }\n  }\n    , [incorrect]);\n\n  return (\n    <>\n      <div className=\"legend\">\n        {\n          Boolean(sortable) &&\n          <span className=\"legend-badge sort\">\n            <span className=\"badge_icon material-icons material-icons-outlined\">\n              sort\n            </span>\n          </span>\n        }\n        {\n          Boolean(multiple) &&\n          <span className=\"legend-badge multiple\">\n            <span className=\"badge_icon material-icons material-icons-outlined\">\n              checklist_rtl\n            </span>\n          </span>\n        }\n        <button className=\"help\" onClick={onNeedAbout}>Правила</button>\n      </div>\n      <p className=\"description multiline\">{description}</p>\n      <button className=\"next\" onClick={onNext}>Дальше</button>\n      <button className=\"submit\" onClick={onSubmit}>Отправить</button>\n      <div className={`alert ${incorrect ? 'alert-shown' : 'alert-hidden'}`}>\n        <strong>{reason}</strong>\n      </div>\n\n      {\n        list\n      }\n      {\n        Boolean(result) && <div className=\"result\">\n          <button className=\"next\" onClick={onNext}>Дальше</button>\n          <Result {...result} />\n        </div>\n      }\n      {\n        Boolean(needAbout) && <div className=\"about\">\n          <About />\n        </div>\n      }\n\n      <NotificationContainer />\n    </>)\n}\n","import { render } from 'react-dom'\nimport React, { useState } from 'react'\nimport './styles.css'\nimport App from './App'\nimport {url} from './utils'\n\nexport const swapInArray = (arr, idx1, idx2) => {\n  const result = [...arr];\n  [result[idx1], result[idx2]] = [arr[idx2], arr[idx1]]\n  return result;\n}\n\n(async () => {\n\n  const poll = window.location.pathname.replace('/', '');\n\n  if (!Boolean(poll)) {\n    const res = await fetch(url + '/polls');\n    const allPolls = await res.json();\n    const listOfPolls = (<ul>\n      {allPolls.map((poll) => <li><a href={poll}>{poll}</a></li>)}\n      </ul>)\n    render(listOfPolls, document.getElementById('root'));\n    return\n  }\n\n  const fetchedQuestion = await fetch(url + '/rndpoll/'+poll);\n\n  let question = await fetchedQuestion.json();\n\n  question = {...question, poll};\n\n  render(<App {...question}/>, document.getElementById('root'))\n\n})();"],"sourceRoot":""}