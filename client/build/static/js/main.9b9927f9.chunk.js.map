{"version":3,"sources":["utils.js","DraggableList.js","NonDraggableList.js","Result.js","About.js","App.js","index.js"],"names":["selectMapper","true","item","id","commented","false","url","SortableItem","sortableElement","_ref","value","onToggle","line","react_default","a","createElement","className","onMouseDown","Boolean","SortableContainer","sortableContainer","_ref2","children","DraggableList","_ref3","items","multiple","onItemsChanged","_useState","useState","_useState2","Object","slicedToArray","itemsVal","setItems","concat","onSortEnd","_ref4","oldIndex","newIndex","result","arrayMoveImmutable","useWindowAsScrollContainer","map","index","key","objectSpread","UngraggableItem","NonDraggableList","NonDraggableList_UngraggableItem","console","log","Result","links","text","Fragment","msg","link","href","target","window","localStorage","setItem","alt","src","width","height","class","onClick","location","reload","listPresenter","props","App","question","poll","description","blocks","sortable","undefined","setResult","_useState3","_useState4","incorrect","setIncorrect","needAbout","getItem","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","content","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","lines","filter","block","sent","parse","stop","apply","this","arguments","onNext","Math","random","_useState5","_useState6","useEffect","document","title","list","removeItem","onTransitionEnd","About_Result","swapInArray","arr","idx1","idx2","toConsumableArray","fetchedQuestion","pathname","replace","json","render","getElementById"],"mappings":"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","file":"static/js/main.9b9927f9.chunk.js","sourcesContent":["export const selectMapper = {\n    true: (item, id) => item.id === id ? !item.commented : item.commented,\n    false: (item, id) => item.id !== id\n}\n\nexport const url = 'http://boysthings.top:9999';\n//export const url = 'http://localhost:9999';","import React, { Component, useEffect, useState } from 'react';\nimport { render } from 'react-dom';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable } from 'array-move';\nimport { selectMapper } from './utils'\n\nconst SortableItem = sortableElement(({ value, onToggle }) => {\n    const { line, commented } = value;\n    return (<li className={commented ? 'commented' : ''}>\n        <div className=\"item\">\n            <button className=\"comment\" onMouseDown={onToggle}>\n                {\n                    Boolean(commented) ? (\n                        <span className=\"material-icons material-icons-outlined\">\n                            add\n                        </span>\n                    ) : (\n                        <span className=\"material-icons material-icons-outlined\">\n                            remove\n                        </span>\n                    )\n                }\n            </button>\n            <p className=\"multiline\">{line}</p>\n            <span className=\"drag material-icons material-icons-outlined\">\n                drag_indicator\n            </span>\n        </div>\n    </li>)\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n    return <ul>{children}</ul>;\n});\n\nexport default function DraggableList({ items, multiple, onItemsChanged }) {\n\n    const [itemsVal, setItems] = useState(items);\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        const result = arrayMoveImmutable(itemsVal, oldIndex, newIndex);\n        setItems(result);\n        onItemsChanged(result);\n    };\n\n    const onItemToggle = (id) => () => {\n        const result = itemsVal.map((item) => ({ ...item, commented: selectMapper[multiple](item, id) }));\n        setItems(result);\n        onItemsChanged(result);\n    }\n\n    return (\n        <div className={`content ${multiple && 'multiple'}`}>\n            <SortableContainer onSortEnd={onSortEnd} useWindowAsScrollContainer={true}>\n                {itemsVal.map((value, index) => (\n                    <SortableItem key={`item-${value.id}`} index={index} value={value} onToggle={onItemToggle(value.id)} />\n                ))}\n            </SortableContainer>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { selectMapper } from './utils'\n\nconst UngraggableItem = ({ value, onToggle }) => {\n    const { line, commented } = value;\n    return (<li className={commented ? 'commented' : ''}>\n        <div className=\"item\">\n            <button className=\"comment\" onMouseDown={onToggle}>\n                {\n                    Boolean(commented) ? (\n                        <span className=\"material-icons material-icons-outlined\">\n                            add\n                        </span>\n                    ) : (\n                        <span className=\"material-icons material-icons-outlined\">\n                            remove\n                        </span>\n                    )\n                }\n            </button>\n            <p className=\"multiline\">{line}</p>\n        </div>\n    </li>)\n};\n\nexport default function NonDraggableList({ items, multiple, onItemsChanged }) {\n\n    const [itemsVal, setItems] = useState(items);\n\n    const onItemToggle = (id) => () => {\n        const result = itemsVal.map((item) => ({ ...item, commented: selectMapper[multiple](item, id) }));\n        setItems(result);\n        console.log(result)\n        onItemsChanged(result);\n    }\n\n    return (\n        <ul className={`undraggable ${multiple && 'multiple'}`}>\n            {itemsVal.map(item => (\n                <UngraggableItem key={`item-${item.id}`} value={item} onToggle={onItemToggle(item.id)} />))}\n        </ul>\n    );\n}\n","import React from 'react';\n\nexport default function Result({ links, text }) {\n\n    return (\n        <>\n            <p>Верно!</p>\n            <p>{text}</p>\n            <ui>\n                {\n                    links.map(({ text: msg, link }, index) => (\n                        <li key={index} ><a href={link} target=\"_blank\">{msg}</a></li>\n                    ))\n                }\n            </ui>\n            <p>Поучаствуй в розыгрыше ватрушки для зимних катаний! Оставь свои контакты <a href=\"https://docs.google.com/forms/d/1_qOo9r05XTCCKvgIGJChXD3FlPAzOBLYdkxjxsJb55U/edit\" target=\"_blank\">Тут</a> и жди результатов сегодня в 19:00</p>\n        </>\n    );\n}\n","import React from 'react';\n\nexport default function Result({ links, text }) {\n\n    window.localStorage.setItem('acquainted', true);\n\n    const onGo = () => {\n        window.location.reload();\n    }\n\n    return (\n        <>\n            <a href=\"https://www.devexperts.com/\">\n                <img alt=\"devexperts.com\" src=\"/static/logo.svg\"\n                    width=\"150\" height=\"40\" />\n            </a>\n\n            <p>Международная карьера в Fintech:</p>\n            <p><a href=\"https://devexperts.com/about-devexperts/\" target=\"_blank\">Подробнее о наших продуктах и команде</a></p>\n            <p><a href=\"https://careers.devexperts.com/vacancies/?country=ru&remote=true\" target=\"_blank\">Наши вакансии</a></p>\n\n\n            <p>\n                Приложение предлагает решить задачу.\n                Для пропуска нужно начать Далее.\n                Для отправки на проверку Отправить.\n                Для комментирования/раскомментирования строки нужно нажать на \"-/+\"\n                Допустимы следующие типы заданий:\n            </p>\n\n            <span className=\"badge sort\">\n                <span className=\"badge_icon material-icons material-icons-outlined\">\n                    sort\n                </span>\n                Необходимо отсортировать\n            </span>\n\n            <span className=\"badge multiple\">\n                <span class=\"badge_icon material-icons material-icons-outlined\">\n                    checklist_rtl\n                </span>\n                Несколько вариантов\n            </span>\n\n            <button className=\"go\" onClick={onGo}>Начать!</button>\n        </>\n    );\n}\n","import DraggableList from './DraggableList'\nimport NonDraggableList from './NonDraggableList'\nimport Result from './Result'\nimport About from './About'\nimport React, { useState, useEffect } from 'react';\nimport { url } from './utils';\n\nconst listPresenter = {\n  true: (props) => <DraggableList {...props} />,\n  false: (props) => <NonDraggableList {...props} />,\n}\n\nexport default function App(question) {\n\n  const {\n    poll,\n    description,\n    blocks,\n    multiple,\n    sortable,\n    id\n  } = question;\n\n  const [result, setResult] = useState(undefined);\n\n  const [incorrect, setIncorrect] = useState(false);\n\n  const needAbout = !Boolean(window.localStorage.getItem('acquainted'));\n\n  const onSubmit = async () => {\n\n    const rawResponse = await fetch(url + '/result/' + poll, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        question: id,\n        lines: itemsVal.filter(block => !block.commented).map(block => block.id)\n      })\n    });\n\n    const text = await rawResponse.text();\n\n    const content = Boolean(text) ? JSON.parse(text) : undefined;\n\n    setResult(content);\n\n    setIncorrect(!Boolean(content))\n  }\n\n  const onNext = () => {\n    window.location.reload();\n  }\n\n  const items = multiple\n    ? blocks.map(block => ({ ...block, commented: Math.random() < 0.5 }))\n    : blocks.map(block => ({ ...block, commented: block === blocks[0] }))\n\n\n  const [itemsVal, setItems] = useState(items);\n\n  useEffect(() => {\n    document.title = \"Code Puzzle\"\n  }, []);\n\n  const list = listPresenter[sortable]({ items, onItemsChanged: setItems, multiple });\n\n  const onNeedAbout = () => {\n    window.localStorage.removeItem('acquainted');\n    window.location.reload();\n  }\n\n  return (\n    <>\n      <div className=\"legend\">\n        {\n          Boolean(sortable) &&\n          <span className=\"legend-badge sort\">\n            <span className=\"badge_icon material-icons material-icons-outlined\">\n              sort\n            </span>\n          </span>\n        }\n        {\n          Boolean(multiple) &&\n          <span className=\"legend-badge multiple\">\n            <span class=\"badge_icon material-icons material-icons-outlined\">\n              checklist_rtl\n            </span>\n          </span>\n        }\n        <button className=\"help\" onClick={onNeedAbout}>Правила</button>\n      </div>\n      <p className=\"description multiline\">{description}</p>\n      <button className=\"next\" onClick={onNext}>Дальше</button>\n      <button className=\"submit\" onClick={onSubmit}>Отправить</button>\n      <div className={`alert ${incorrect ? 'alert-shown' : 'alert-hidden'}`}\n        onTransitionEnd={() => {\n          console.log('onTransitionEnd');\n          setIncorrect(false)\n        }}>\n        <strong>Извините. Не принято!</strong>\n      </div>\n\n      {\n        list\n      }\n      {\n        Boolean(result) && <div className=\"result\">\n          <button onClick={onNext}>Дальше</button>\n          <Result {...result} />\n        </div>\n      }\n      {\n        Boolean(needAbout) && <div className=\"about\">\n          <About />\n        </div>\n      }\n    </>)\n}","import { render } from 'react-dom'\nimport React, { useState } from 'react'\nimport './styles.css'\nimport App from './App'\nimport {url} from './utils'\n\nexport const swapInArray = (arr, idx1, idx2) => {\n  const result = [...arr];\n  [result[idx1], result[idx2]] = [arr[idx2], arr[idx1]]\n  return result;\n}\n\n(async () => {\n\n  const poll = window.location.pathname.replace('/', '');\n\n  const fetchedQuestion = await fetch(url + '/rndpoll/'+poll);\n\n  let question = await fetchedQuestion.json();\n\n  question = {...question, poll};\n\n  render(<App {...question}/>, document.getElementById('root'))\n\n})();"],"sourceRoot":""}