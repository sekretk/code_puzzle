{"version":3,"sources":["DraggableList.js","NonDraggableList.js","App.js","index.js"],"names":["SortableItem","sortableElement","_ref","value","onToggle","line","commented","react_default","a","createElement","className","onMouseDown","index_es","icon","SortableContainer","sortableContainer","_ref2","children","DraggableList","_ref3","items","onItemsChanged","multiple","_useState","useState","_useState2","Object","slicedToArray","itemsVal","setItems","onSortEnd","_ref4","oldIndex","newIndex","arrayMoveImmutable","useWindowAsScrollContainer","map","index","key","concat","id","item","objectSpread","NonDraggableList","listPresenter","true","props","false","App","question","poll","description","blocks","sortable","undefined","result","setResult","_useState3","_useState4","incorrect","setIncorrect","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","content","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","lines","filter","block","sent","text","Boolean","stop","apply","this","arguments","onNext","window","location","reload","Math","random","_useState5","_useState6","useEffect","document","title","list","Fragment","onClick","onTransitionEnd","console","log","swapInArray","arr","idx1","idx2","toConsumableArray","fetchedQuestion","pathname","replace","json","render","getElementById"],"mappings":"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","file":"static/js/main.41fe397e.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { render } from 'react-dom';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable } from 'array-move';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst SortableItem = sortableElement(({ value, onToggle }) => {\n    const { line, commented } = value;\n    return (<li className={commented ? 'commented' : ''}>\n        <div className=\"item\">\n            <button className=\"comment\" onMouseDown={onToggle}>//</button>\n            <p className=\"multiline\">{line}</p>\n            <FontAwesomeIcon icon=\"fa-solid fa-grip-dots-vertical\" />\n        </div>\n    </li>)\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n    return <ul>{children}</ul>;\n});\n\nexport default function DraggableList({ items, multiple, onItemsChanged }) {\n\n    const [itemsVal, setItems] = useState(items);\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        setItems(arrayMoveImmutable(itemsVal, oldIndex, newIndex));\n        onItemsChanged(itemsVal);\n    };\n\n    const onItemToggle = (id) => () => {\n        setItems(itemsVal.map((item) => ({ ...item, commented: item.id === id ? !item.commented : item.commented })));\n        onItemsChanged(itemsVal);\n    }\n\n    return (\n            <div className=\"content\">\n                <SortableContainer onSortEnd={onSortEnd} useWindowAsScrollContainer={true}>\n                    {itemsVal.map((value, index) => (\n                        <SortableItem key={`item-${value.id}`} index={index} value={value} onToggle={onItemToggle(value.id)} />\n                    ))}\n                </SortableContainer>\n            </div>\n           );\n}\n","import React, { useState } from 'react';\n\nexport default function NonDraggableList({ items, onItemsChanged }) {\n\n    const [itemsVal, setItems] = useState(items);\n\n    const onItemToggle = (id) => () => {\n        setItems(itemsVal.map((item) => ({ ...item, commented: item.id === id ? !item.commented : item.commented })));\n        onItemsChanged(itemsVal);\n    }\n\n    return (\n        <p>Non graggable</p>\n    );\n}\n","import DraggableList from './DraggableList'\nimport NonDraggableList from './NonDraggableList'\nimport React, { useState, useEffect } from 'react';\n\nconst listPresenter = {\n  true: (props) => <DraggableList {...props}/>,\n  false: (props) => <NonDraggableList {...props}/>,\n}\n\nexport default function App(question) {\n\n  const {\n    poll,\n    description,\n    blocks, \n    multiple,\n    sortable,\n    id\n  } = question;\n\n  const [result, setResult] = useState(undefined);\n\n  const [incorrect, setIncorrect] = useState(false);\n\n  const onSubmit = async () => {\n    const rawResponse = await fetch('http://boysthings.top:9999/result/' + poll, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ \n        id: id, \n        lines: itemsVal.filter(block => !block.commented).map(block => block.id) \n      })\n    });\n    const content = await rawResponse.text();\n\n    setResult(content);\n\n    setIncorrect(!Boolean(content))\n  }\n\n  const onNext = () => {\n    window.location.reload();\n  }\n\n  const items = multiple \n    ? blocks.map(block => ({ ...block, commented: Math.random() < 0.5 }))\n    : blocks.map(block => ({ ...block, commented: false }))\n\n\n  const [itemsVal, setItems] = useState(items);\n\n  useEffect(() => {\n    document.title = \"Code Puzzle\"\n }, []);\n\n const list = listPresenter[sortable]({items, onItemsChanged: setItems, multiple});\n\n  return (\n    <>\n      <p className=\"description multiline\">{description}</p>\n      <button className=\"next\" onClick={onNext}>Дальше</button>\n      <button className=\"submit\" onClick={onSubmit}>Submit</button>\n      <div className={`alert ${incorrect ? 'alert-shown' : 'alert-hidden'}`}\n          onTransitionEnd={() => {\n            console.log('onTransitionEnd');\n            setIncorrect(false)}}>\n        <strong>Извините. Не принято!</strong>\n      </div>   \n\n      {\n        list\n      }\n      {\n        Boolean(result) && <div className=\"result\">\n          <button onClick={onNext}>Дальше</button>\n          <p>Ура! Вы разгадали!</p>\n          <p>{result}</p>\n          <p>google doc!</p>\n          <p>dx link?</p>\n        </div>\n      }\n    </>)\n}","import { render } from 'react-dom'\nimport React, { useState } from 'react'\nimport './styles.css'\nimport App from './App'\n\nexport const swapInArray = (arr, idx1, idx2) => {\n  const result = [...arr];\n  [result[idx1], result[idx2]] = [arr[idx2], arr[idx1]]\n  return result;\n}\n\n(async () => {\n\n  const poll = window.location.pathname.replace('/', '');\n\n  const fetchedQuestion = await fetch('http://boysthings.top:9999/rndpoll/'+poll);\n\n  let question = await fetchedQuestion.json();\n\n  question = {...question, poll};\n\n  render(<App {...question}/>, document.getElementById('root'))\n\n})();"],"sourceRoot":""}