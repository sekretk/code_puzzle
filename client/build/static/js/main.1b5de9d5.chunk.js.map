{"version":3,"sources":["utils.js","DraggableList.js","NonDraggableList.js","Result.js","About.js","reasons.js","App.jsx","index.js"],"names":["selectMapper","true","item","id","commented","false","url","SortableItem","sortableElement","_ref","value","onToggle","line","react_default","a","createElement","className","onMouseDown","Boolean","SortableContainer","sortableContainer","_ref2","children","DraggableList","_ref3","items","multiple","onItemsChanged","_useState","useState","_useState2","Object","slicedToArray","itemsVal","setItems","concat","onSortEnd","_ref4","oldIndex","newIndex","result","arrayMoveImmutable","useWindowAsScrollContainer","map","index","key","objectSpread","UngraggableItem","NonDraggableList","NonDraggableList_UngraggableItem","console","log","Result","links","text","Fragment","msg","link","href","target","window","localStorage","setItem","alt","src","width","height","onClick","location","reload","reasons","listPresenter","props","addReasonToLocalStorage","reason","JSON","stringify","parse","getItem","defineProperty","App","question","poll","description","blocks","sortable","undefined","setResult","_useState3","_useState4","incorrect","setIncorrect","_useState5","_useState6","setReason","_useState7","_useState8","achieve","setAchieve","needAbout","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","content","_reason","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","body","lines","filter","block","sent","Math","floor","random","length","keys","stop","apply","this","arguments","useEffect","NotificationManager","success","onNext","_useState9","sort","_useState10","list","timeout","setTimeout","clearTimeout","removeItem","About_Result","lib","swapInArray","arr","idx1","idx2","toConsumableArray","res","allPolls","listOfPolls","fetchedQuestion","pathname","replace","json","render","document","getElementById","abrupt"],"mappings":"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","file":"static/js/main.1b5de9d5.chunk.js","sourcesContent":["export const selectMapper = {\r\n    true: (item, id) => item.id === id ? !item.commented : item.commented,\r\n    false: (item, id) => item.id !== id\r\n}\r\n\r\nexport const url = 'http://boysthings.top:9999';\r\n//export const url = 'http://localhost:9999';","import React, { Component, useEffect, useState } from 'react';\r\nimport { render } from 'react-dom';\r\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\r\nimport { arrayMoveImmutable } from 'array-move';\r\nimport { selectMapper } from './utils'\r\n\r\nconst SortableItem = sortableElement(({ value, onToggle }) => {\r\n    const { line, commented } = value;\r\n    return (<li className={commented ? 'commented' : ''}>\r\n        <div className=\"item content__item\">\r\n            <button className=\"comment code\" onMouseDown={onToggle}>//</button>\r\n            {\r\n                Boolean(commented)\r\n                    ? (\r\n                        <strike>\r\n                            <p className=\"multiline item__code code\">{line}</p>\r\n                        </strike>\r\n                    )\r\n                    : <p className=\"multiline item__code code\">{line}</p>\r\n            }\r\n            <span className=\"drag material-icons material-icons-outlined\">\r\n                drag_indicator\r\n            </span>\r\n        </div>\r\n    </li>)\r\n});\r\n\r\nconst SortableContainer = sortableContainer(({ children }) => {\r\n    return <ul>{children}</ul>;\r\n});\r\n\r\nexport default function DraggableList({ items, multiple, onItemsChanged }) {\r\n\r\n    const [itemsVal, setItems] = useState(items);\r\n\r\n    const onSortEnd = ({ oldIndex, newIndex }) => {\r\n        const result = arrayMoveImmutable(itemsVal, oldIndex, newIndex);\r\n        setItems(result);\r\n        onItemsChanged(result);\r\n    };\r\n\r\n    const onItemToggle = (id) => () => {\r\n        const result = itemsVal.map((item) => ({ ...item, commented: selectMapper[multiple](item, id) }));\r\n        setItems(result);\r\n        onItemsChanged(result);\r\n    }\r\n\r\n    return (\r\n        <div className={`content ${multiple && 'multiple'}`}>\r\n            <SortableContainer onSortEnd={onSortEnd} useWindowAsScrollContainer={true}>\r\n                {itemsVal.map((value, index) => (\r\n                    <SortableItem key={`item-${value.id}`} index={index} value={value} onToggle={onItemToggle(value.id)} />\r\n                ))}\r\n            </SortableContainer>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState } from 'react';\r\nimport { selectMapper } from './utils'\r\n\r\nconst UngraggableItem = ({ value, onToggle }) => {\r\n    const { line, commented } = value;\r\n    return (<li className={commented ? 'commented' : ''}>\r\n        <div className=\"item\">\r\n            <button className=\"comment\" onMouseDown={onToggle}>//</button>\r\n            {\r\n                Boolean(commented)\r\n                    ? (\r\n                        <strike>\r\n                            <p className=\"multiline code\">{line}</p>\r\n                        </strike>\r\n                    )\r\n                    : <p className=\"multiline code\">{line}</p>\r\n            }\r\n        </div>\r\n    </li>)\r\n};\r\n\r\nexport default function NonDraggableList({ items, multiple, onItemsChanged }) {\r\n\r\n    const [itemsVal, setItems] = useState(items);\r\n\r\n    const onItemToggle = (id) => () => {\r\n        const result = itemsVal.map((item) => ({ ...item, commented: selectMapper[multiple](item, id) }));\r\n        setItems(result);\r\n        console.log(result)\r\n        onItemsChanged(result);\r\n    }\r\n\r\n    return (\r\n        <ul className={`undraggable ${multiple && 'multiple'}`}>\r\n            {itemsVal.map(item => (\r\n                <UngraggableItem key={`item-${item.id}`} value={item} onToggle={onItemToggle(item.id)} />))}\r\n        </ul>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Result({ links, text }) {\r\n\r\n    return (\r\n        <>\r\n            <p>Верно!</p>\r\n            <p className=\"multiline\">{text}</p>\r\n            <ul className=\"result-links\">\r\n                {\r\n                    links.map(({ text: msg, link }, index) => (\r\n                        <li key={index} ><a href={link} target=\"_blank\">{msg}</a></li>\r\n                    ))\r\n                }\r\n            </ul>\r\n            <p>Спасибо за участие!</p>\r\n            <p>Подойди к стенду, назови \"Fintech Forever\" и получи сувенир от команды Devexperts</p>\r\n            <p>А чтобы принять участие в розыгрыше супер-приза, надо заполнить <a href=\"https://docs.google.com/forms/d/1_qOo9r05XTCCKvgIGJChXD3FlPAzOBLYdkxjxsJb55U/edit\" target=\"_blank\">анкету</a>. <br/> Ватрушки для зимних катаний с горки ждёт победителя! :) Розыгрыш сегодня в 19:00</p>\r\n        </>\r\n    );\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Result({ links, text }) {\r\n\r\n    window.localStorage.setItem('acquainted', true);\r\n\r\n    const onGo = () => {\r\n        window.location.reload();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <a href=\"https://www.devexperts.com/\" target=\"_blank\">\r\n                <img alt=\"devexperts.com\" src=\"/static/logo.svg\"\r\n                    width=\"150\" height=\"30\" />\r\n            </a>\r\n\r\n            <p>Международная карьера в Fintech:</p>\r\n            <p><a href=\"https://devexperts.com/about-devexperts/\" target=\"_blank\">Подробнее о наших продуктах и команде</a></p>\r\n            <p><a href=\"https://careers.devexperts.com/vacancies/?country=ru&remote=true\" target=\"_blank\">Наши вакансии</a></p>\r\n\r\n            <br />\r\n            <h3>Правила игры:</h3>\r\n            <p className=\"rules\">\r\n                Приложение предлагает решить задачу.<br />\r\n                Для пропуска нужно нажать \"Далее\".<br />\r\n                Для отправки на проверку - \"Отправить\".<br />\r\n                Для комментирования строки нужно нажать на \"//\".<br />\r\n                На основе фидбэка от 5 минутного тестирования нужно добавить:\r\n                <ul>\r\n                    <li>- Вы ВСЕГДА получаете случайное задание - так что жмите \"Далее\" если уже решали.</li>\r\n                    <li>- При старте закомментированы случайные элементы - не позволяйте этому выбору повлиять на вас!</li>\r\n                </ul>\r\n                Допустимы следующие флаги на задачах:\r\n            </p>\r\n\r\n            <span className=\"badge sort\">\r\n                <span className=\"badge_icon material-icons material-icons-outlined\">\r\n                    sort\r\n                </span>\r\n                Необходимо отсортировать\r\n            </span>\r\n\r\n            <span className=\"badge multiple\">\r\n                <span className=\"badge_icon material-icons material-icons-outlined\">\r\n                    checklist_rtl\r\n                </span>\r\n                Допустимо несколько вариантов\r\n            </span>\r\n\r\n            <button className=\"go\" onClick={onGo}>Начать!</button>\r\n        </>\r\n    );\r\n}\r\n","export const reasons = [\r\n    'Извините, не принято!',\r\n    'Попробуй еще раз',\r\n    'Сервер сказал, что это неправильно',\r\n    'Попытка не пытка, но пока неправильно',\r\n    'Never get back!',\r\n    'Ты должен был бороться со злом, а не примкнуть к нему',\r\n    'Мы всей командой верим, что ты сможешь',\r\n    'Мы в тебя верим!',\r\n    'Путь в тысячу миль начинается с первого шага. Так уж вышло, что он неправильный',\r\n    'У самурая нет цели, у него есть только путь. На своем ты совершил ошибку'\r\n];","import DraggableList from './DraggableList'\r\nimport NonDraggableList from './NonDraggableList'\r\nimport Result from './Result'\r\nimport About from './About'\r\nimport React, { useState, useEffect } from 'react';\r\nimport { url } from './utils';\r\nimport { reasons } from './reasons';\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\n\r\nimport 'react-notifications/dist/react-notifications.css';\r\n\r\nconst listPresenter = {\r\n  true: (props) => <DraggableList {...props} />,\r\n  false: (props) => <NonDraggableList {...props} />,\r\n}\r\n\r\nconst addReasonToLocalStorage = reason => window.localStorage.setItem('reasons', JSON.stringify({ ...JSON.parse(window.localStorage.getItem('reasons')), [reason]: 1 }));\r\n\r\nexport default function App(question) {\r\n\r\n  const {\r\n    poll,\r\n    description,\r\n    blocks,\r\n    multiple,\r\n    sortable,\r\n    id\r\n  } = question;\r\n\r\n  const [result, setResult] = useState(undefined);\r\n\r\n  const [incorrect, setIncorrect] = useState(false);\r\n\r\n  const [reason, setReason] = useState(undefined);\r\n\r\n  const [achieve, setAchieve] = useState(undefined);\r\n\r\n  const needAbout = !Boolean(window.localStorage.getItem('acquainted'));\r\n\r\n  const checkForAchieve = () => {\r\n    const lsReasons = Object.keys(JSON.parse(window.localStorage.getItem('reasons')));\r\n    if (lsReasons.length === reasons.length && !window.localStorage.getItem('achieve')) {\r\n      window.localStorage.setItem('achieve', '1');\r\n    }\r\n  };\r\n\r\n  const showAchieve = () => {\r\n    if (window.localStorage.getItem('achieve') === '1') {\r\n      setAchieve({ text: 'Упорство', description: 'Тебе удалось раздобыть все сообщения о неправильных ответах' })\r\n      window.localStorage.setItem('achieve', '0');\r\n    }\r\n  };\r\n\r\n  const onSubmit = async () => {\r\n\r\n    const rawResponse = await fetch(url + '/result/' + poll, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        question: id,\r\n        lines: itemsVal.filter(block => !block.commented).map(block => block.id)\r\n      })\r\n    });\r\n\r\n    const text = await rawResponse.text();\r\n\r\n    const content = Boolean(text) ? JSON.parse(text) : undefined;\r\n\r\n    setResult(content);\r\n\r\n    setIncorrect(!Boolean(content))\r\n\r\n    if (!content) {\r\n      const reason = reasons[Math.floor(Math.random() * reasons.length)]\r\n      setReason(reason);\r\n      addReasonToLocalStorage(reason);\r\n      checkForAchieve();\r\n      showAchieve();\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (achieve) {\r\n      NotificationManager.success(achieve.description, achieve.text);\r\n    }\r\n  }, achieve);\r\n\r\n  const onNext = () => {\r\n    window.location.reload();\r\n  }\r\n\r\n  const items = multiple\r\n    ? blocks.map(block => ({ ...block, commented: Math.random() < 0.5 }))\r\n    : blocks.map(block => ({ ...block, commented: block !== blocks[0] }));\r\n\r\n  const [itemsVal, setItems] = useState(items.sort(() => (Math.random() > .5) ? 1 : -1));\r\n\r\n  const list = listPresenter[sortable]({ items, onItemsChanged: setItems, multiple });\r\n\r\n  const onNeedAbout = () => {\r\n    window.localStorage.removeItem('acquainted');\r\n    window.location.reload();\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (incorrect) {\r\n      const timeout = setTimeout(() => {\r\n        setIncorrect(false);\r\n      }, 1000);\r\n\r\n      return () => clearTimeout(timeout)\r\n    }\r\n  }\r\n    , [incorrect]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"legend\">\r\n        {\r\n          Boolean(sortable) &&\r\n          <span className=\"legend-badge sort\">\r\n            <span className=\"badge_icon material-icons material-icons-outlined\">\r\n              sort\r\n            </span>\r\n          </span>\r\n        }\r\n        {\r\n          Boolean(multiple) &&\r\n          <span className=\"legend-badge multiple\">\r\n            <span className=\"badge_icon material-icons material-icons-outlined\">\r\n              checklist_rtl\r\n            </span>\r\n          </span>\r\n        }\r\n        <button className=\"help\" onClick={onNeedAbout}>Правила</button>\r\n      </div>\r\n      <p className=\"description multiline\">{description}</p>\r\n      <button className=\"next\" onClick={onNext}>Дальше</button>\r\n      <button className=\"submit\" onClick={onSubmit}>Отправить</button>\r\n      <div className={`alert ${incorrect ? 'alert-shown' : 'alert-hidden'}`}>\r\n        <strong>{reason}</strong>\r\n      </div>\r\n\r\n      {\r\n        list\r\n      }\r\n      {\r\n        Boolean(result) && <div className=\"result\">\r\n          <button className=\"next\" onClick={onNext}>Дальше</button>\r\n          <Result {...result} />\r\n        </div>\r\n      }\r\n      {\r\n        Boolean(needAbout) && <div className=\"about\">\r\n          <About />\r\n        </div>\r\n      }\r\n\r\n      <NotificationContainer />\r\n    </>)\r\n}\r\n","import { render } from 'react-dom'\r\nimport React, { useState } from 'react'\r\nimport './styles.css'\r\nimport App from './App'\r\nimport {url} from './utils'\r\n\r\nexport const swapInArray = (arr, idx1, idx2) => {\r\n  const result = [...arr];\r\n  [result[idx1], result[idx2]] = [arr[idx2], arr[idx1]]\r\n  return result;\r\n}\r\n\r\n(async () => {\r\n\r\n  const poll = window.location.pathname.replace('/', '');\r\n\r\n  if (!Boolean(poll)) {\r\n    const res = await fetch(url + '/polls');\r\n    const allPolls = await res.json();\r\n    const listOfPolls = (<ul>\r\n      {allPolls.map((poll) => <li><a href={poll}>{poll}</a></li>)}\r\n      </ul>)\r\n    render(listOfPolls, document.getElementById('root'));\r\n    return\r\n  }\r\n\r\n  const fetchedQuestion = await fetch(url + '/rndpoll/'+poll);\r\n\r\n  let question = await fetchedQuestion.json();\r\n\r\n  question = {...question, poll};\r\n\r\n  render(<App {...question}/>, document.getElementById('root'))\r\n\r\n})();"],"sourceRoot":""}