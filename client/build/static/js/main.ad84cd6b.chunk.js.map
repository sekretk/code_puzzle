{"version":3,"sources":["List.js","App.js","index.js"],"names":["SortableItem","sortableElement","_ref","value","onToggle","line","commented","react_default","a","createElement","className","onMouseDown","index_es","icon","SortableContainer","sortableContainer","_ref2","children","List","_ref3","items","onItemsChanged","_useState","useState","_useState2","Object","slicedToArray","itemsVal","setItems","onSortEnd","_ref4","oldIndex","newIndex","arrayMoveImmutable","useWindowAsScrollContainer","map","index","key","concat","id","item","objectSpread","App","question","poll","description","blocks","multiple","undefined","result","setResult","_useState3","_useState4","setIncorrecrt","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","content","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","lines","filter","block","sent","text","Boolean","stop","apply","this","arguments","onNext","window","location","reload","Math","random","_useState5","_useState6","useEffect","document","title","Fragment","onClick","swapInArray","arr","idx1","idx2","toConsumableArray","fetchedQuestion","pathname","replace","json","render","getElementById"],"mappings":"iQAMMA,EAAeC,YAAgB,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,MAAOC,EAAeF,EAAfE,SACnCC,EAAoBF,EAApBE,KAAMC,EAAcH,EAAdG,UACd,OAAQC,EAAAC,EAAAC,cAAA,MAAIC,UAAWJ,EAAY,YAAc,IAC7CC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,UAAQE,YAAaP,GAArB,OACAG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaL,GAC1BE,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAiBC,KAAK,uCAK5BC,EAAoBC,YAAkB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SAC3C,OAAOV,EAAAC,EAAAC,cAAA,UAAKQ,KAGD,SAASC,EAATC,GAAyC,IAAzBC,EAAyBD,EAAzBC,MAAOC,EAAkBF,EAAlBE,eAAkBC,EAEvBC,mBAASH,GAFcI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAE7CK,EAF6CH,EAAA,GAEnCI,EAFmCJ,EAAA,GAcpD,OACQjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAACK,EAAD,CAAmBe,UAZb,SAAAC,GAA4B,IAAzBC,EAAyBD,EAAzBC,SAAUC,EAAeF,EAAfE,SAC3BJ,EAASK,YAAmBN,EAAUI,EAAUC,IAChDX,EAAeM,IAUkCO,4BAA4B,GAChEP,EAASQ,IAAI,SAAChC,EAAOiC,GAAR,OACV7B,EAAAC,EAAAC,cAACT,EAAD,CAAcqC,IAAG,QAAAC,OAAUnC,EAAMoC,IAAMH,MAAOA,EAAOjC,MAAOA,EAAOC,UATjEmC,EASwFpC,EAAMoC,GATvF,WACzBX,EAASD,EAASQ,IAAI,SAACK,GAAD,OAAAf,OAAAgB,EAAA,EAAAhB,CAAA,GAAgBe,EAAhB,CAAsBlC,UAAWkC,EAAKD,KAAOA,GAAMC,EAAKlC,UAAYkC,EAAKlC,eAC/Fe,EAAeM,OAFE,IAACY,MC3BX,SAASG,EAAIC,GAAU,IAGlCC,EAKED,EALFC,KACAC,EAIEF,EAJFE,YACAC,EAGEH,EAHFG,OACAC,EAEEJ,EAFFI,SACAR,EACEI,EADFJ,GAPkCjB,EAURC,wBAASyB,GAVDxB,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAU7B2B,EAV6BzB,EAAA,GAUrB0B,EAVqB1B,EAAA,GAAA2B,EAYD5B,oBAAS,GAZR6B,EAAA3B,OAAAC,EAAA,EAAAD,CAAA0B,EAAA,GAYlBE,GAZkBD,EAAA,GAAAA,EAAA,IAc9BE,EAAQ,eAAApD,EAAAuB,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAhD,EAAAiD,KAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAJ,EAAAhD,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACWC,MAAM,qCAAuCrB,EAAM,CAC3EsB,OAAQ,OACRC,QAAS,CACPC,OAAU,mBACVC,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBjC,GAAIA,EACJkC,MAAO9C,EAAS+C,OAAO,SAAAC,GAAK,OAAKA,EAAMrE,YAAW6B,IAAI,SAAAwC,GAAK,OAAIA,EAAMpC,SAT1D,cACToB,EADSG,EAAAc,KAAAd,EAAAE,KAAA,EAYOL,EAAYkB,OAZnB,OAYTjB,EAZSE,EAAAc,KAcf1B,EAAUU,GAEVP,GAAeyB,QAAQlB,IAhBR,wBAAAE,EAAAiB,SAAArB,MAAH,yBAAAxD,EAAA8E,MAAAC,KAAAC,YAAA,GAmBRC,EAAS,WACbC,OAAOC,SAASC,UAGZlE,EAAQ2B,EACVD,EAAOX,IAAI,SAAAwC,GAAK,OAAAlD,OAAAgB,EAAA,EAAAhB,CAAA,GAAUkD,EAAV,CAAiBrE,UAAWiF,KAAKC,SAAW,OAC5D1C,EAAOX,IAAI,SAAAwC,GAAK,OAAAlD,OAAAgB,EAAA,EAAAhB,CAAA,GAAUkD,EAAV,CAAiBrE,WAAW,MAvCZmF,EA0CPlE,mBAASH,GA1CFsE,EAAAjE,OAAAC,EAAA,EAAAD,CAAAgE,EAAA,GA0C7B9D,EA1C6B+D,EAAA,GA0CnB9D,EA1CmB8D,EAAA,GAgDpC,OAJAC,oBAAU,WACRC,SAASC,MAAQ,eACjB,IAGAtF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAsF,SAAA,KACEvF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAAyBmC,GACtCtC,EAAAC,EAAAC,cAAA,UAAQsF,QAASZ,GAAjB,wCACA5E,EAAAC,EAAAC,cAAA,UAAQsF,QAASzC,GAAjB,UAEA/C,EAAAC,EAAAC,cAACS,EAAD,CAAME,MAAOA,EAAOC,eAAgBO,IAElCkD,QAAQ7B,IAAW1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UAChCH,EAAAC,EAAAC,cAAA,UAAQsF,QAASZ,GAAjB,wCACA5E,EAAAC,EAAAC,cAAA,SAAIwC,GACJ1C,EAAAC,EAAAC,cAAA,iECzDH,IAAMuF,EAAc,SAACC,EAAKC,EAAMC,GACrC,IAAMlD,EAAMxB,OAAA2E,EAAA,EAAA3E,CAAOwE,GAD2B/F,EAEf,CAAC+F,EAAIE,GAAOF,EAAIC,IAC/C,OADCjD,EAAOiD,GAFsChG,EAAA,GAE/B+C,EAAOkD,GAFwBjG,EAAA,GAGvC+C,GAGTxB,OAAA8B,EAAA,EAAA9B,CAAA+B,EAAAhD,EAAAiD,KAAC,SAAAC,IAAA,IAAAd,EAAAyD,EAAA1D,EAAA,OAAAa,EAAAhD,EAAAqD,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEOpB,EAAOwC,OAAOC,SAASiB,SAASC,QAAQ,IAAK,IAFpDzC,EAAAE,KAAA,EAI+BC,MAAM,sCAAsCrB,GAJ3E,cAIOyD,EAJPvC,EAAAc,KAAAd,EAAAE,KAAA,EAMsBqC,EAAgBG,OANtC,OAMK7D,EANLmB,EAAAc,KAQCjC,EAAQlB,OAAAgB,EAAA,EAAAhB,CAAA,GAAOkB,EAAP,CAAiBC,SAEzB6D,iBAAOlG,EAAAC,EAAAC,cAACiC,EAAQC,GAAaiD,SAASc,eAAe,SAVtD,wBAAA5C,EAAAiB,SAAArB,KAADjC","file":"static/js/main.ad84cd6b.chunk.js","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { render } from 'react-dom';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable } from 'array-move';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst SortableItem = sortableElement(({ value, onToggle }) => {\n    const { line, commented } = value;\n    return (<li className={commented ? 'commented' : ''}>\n        <div className=\"item\">\n            <button onMouseDown={onToggle}>com</button>\n            <p className=\"multiline\">{line}</p>\n            <FontAwesomeIcon icon=\"fa-solid fa-grip-dots-vertical\" />\n        </div>\n    </li>)\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n    return <ul>{children}</ul>;\n});\n\nexport default function List({ items, onItemsChanged }) {\n\n    const [itemsVal, setItems] = useState(items);\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        setItems(arrayMoveImmutable(itemsVal, oldIndex, newIndex));\n        onItemsChanged(itemsVal);\n    };\n\n    const onItemToggle = (id) => () => {\n        setItems(itemsVal.map((item) => ({ ...item, commented: item.id === id ? !item.commented : item.commented })));\n        onItemsChanged(itemsVal);\n    }\n\n    return (\n            <div className=\"content\">\n                <SortableContainer onSortEnd={onSortEnd} useWindowAsScrollContainer={true}>\n                    {itemsVal.map((value, index) => (\n                        <SortableItem key={`item-${value.id}`} index={index} value={value} onToggle={onItemToggle(value.id)} />\n                    ))}\n                </SortableContainer>\n            </div>\n           );\n}\n","import List from './List'\nimport React, { useState, useEffect } from 'react';\n\nexport default function App(question) {\n\n  const {\n    poll,\n    description,\n    blocks, \n    multiple,\n    id\n  } = question;\n\n  const [result, setResult] = useState(undefined);\n\n  const [incorrect, setIncorrecrt] = useState(false);\n\n  const onSubmit = async () => {\n    const rawResponse = await fetch('http://boysthings.top:9999/result/' + poll, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ \n        id: id, \n        lines: itemsVal.filter(block => !block.commented).map(block => block.id) \n      })\n    });\n    const content = await rawResponse.text();\n\n    setResult(content);\n\n    setIncorrecrt(!Boolean(content))\n  }\n\n  const onNext = () => {\n    window.location.reload();\n  }\n\n  const items = multiple \n    ? blocks.map(block => ({ ...block, commented: Math.random() < 0.5 }))\n    : blocks.map(block => ({ ...block, commented: false }))\n\n\n  const [itemsVal, setItems] = useState(items);\n\n  useEffect(() => {\n    document.title = \"Code Puzzle\"\n }, []);\n\n  return (\n    <>\n      <p className=\"description multiline\">{description}</p>\n      <button onClick={onNext}>Дальше</button>\n      <button onClick={onSubmit}>Submit</button>\n\n      <List items={items} onItemsChanged={setItems} />\n      {\n        Boolean(result) && <div className=\"result\">\n          <button onClick={onNext}>Дальше</button>\n          <p>{result}</p>\n          <p>Any text</p>\n        </div>\n      }\n    </>)\n}","import { render } from 'react-dom'\nimport React, { useState } from 'react'\nimport './styles.css'\nimport App from './App'\n\nexport const swapInArray = (arr, idx1, idx2) => {\n  const result = [...arr];\n  [result[idx1], result[idx2]] = [arr[idx2], arr[idx1]]\n  return result;\n}\n\n(async () => {\n\n  const poll = window.location.pathname.replace('/', '');\n\n  const fetchedQuestion = await fetch('http://boysthings.top:9999/rndpoll/'+poll);\n\n  let question = await fetchedQuestion.json();\n\n  question = {...question, poll};\n\n  render(<App {...question}/>, document.getElementById('root'))\n\n})();"],"sourceRoot":""}