{"version":3,"sources":["utils.js","DraggableList.js","NonDraggableList.js","Result.js","App.js","index.js"],"names":["selectMapper","true","item","id","commented","false","url","SortableItem","sortableElement","_ref","value","onToggle","line","react_default","a","createElement","className","onMouseDown","SortableContainer","sortableContainer","_ref2","children","DraggableList","_ref3","items","multiple","onItemsChanged","_useState","useState","_useState2","Object","slicedToArray","itemsVal","setItems","concat","onSortEnd","_ref4","oldIndex","newIndex","result","arrayMoveImmutable","useWindowAsScrollContainer","map","index","key","objectSpread","UngraggableItem","NonDraggableList","NonDraggableList_UngraggableItem","console","log","Result","links","text","Fragment","listPresenter","props","App","question","poll","description","blocks","sortable","undefined","setResult","_useState3","_useState4","incorrect","setIncorrect","onSubmit","asyncToGenerator","regenerator_default","mark","_callee","rawResponse","content","wrap","_context","prev","next","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","lines","filter","block","sent","Boolean","stop","apply","this","arguments","onNext","window","location","reload","Math","random","_useState5","_useState6","useEffect","document","title","list","onClick","onTransitionEnd","swapInArray","arr","idx1","idx2","toConsumableArray","fetchedQuestion","pathname","replace","json","render","getElementById"],"mappings":"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","file":"static/js/main.2b194626.chunk.js","sourcesContent":["export const selectMapper = {\n    true: (item, id) => item.id === id ? !item.commented : item.commented,\n    false: (item, id) => item.id !== id\n}\n\nexport const url = 'http://boysthings.top:9999';\n//export const url = 'http://localhost:9999';","import React, { Component, useEffect, useState } from 'react';\nimport { render } from 'react-dom';\nimport { sortableContainer, sortableElement } from 'react-sortable-hoc';\nimport { arrayMoveImmutable } from 'array-move';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { selectMapper } from './utils'\n\nconst SortableItem = sortableElement(({ value, onToggle }) => {\n    const { line, commented } = value;\n    return (<li className={commented ? 'commented' : ''}>\n        <div className=\"item\">\n            <button className=\"comment\" onMouseDown={onToggle}>//</button>\n            <p className=\"multiline\">{line}</p>\n            <span>...</span>\n        </div>\n    </li>)\n});\n\nconst SortableContainer = sortableContainer(({ children }) => {\n    return <ul>{children}</ul>;\n});\n\nexport default function DraggableList({ items, multiple, onItemsChanged }) {\n\n    const [itemsVal, setItems] = useState(items);\n\n    const onSortEnd = ({ oldIndex, newIndex }) => {\n        const result = arrayMoveImmutable(itemsVal, oldIndex, newIndex);\n        setItems(result);\n        onItemsChanged(result);\n    };\n\n    const onItemToggle = (id) => () => {\n        const result = itemsVal.map((item) => ({ ...item, commented: selectMapper[multiple](item, id) }));\n        setItems(result);\n        onItemsChanged(result);\n    }\n\n    return (\n        <div className={`content ${multiple && 'multiple'}`}>\n            <SortableContainer onSortEnd={onSortEnd} useWindowAsScrollContainer={true}>\n                {itemsVal.map((value, index) => (\n                    <SortableItem key={`item-${value.id}`} index={index} value={value} onToggle={onItemToggle(value.id)} />\n                ))}\n            </SortableContainer>\n        </div>\n    );\n}\n","import React, { useState } from 'react';\nimport { selectMapper } from './utils'\n\nconst UngraggableItem = ({ value, onToggle }) => {\n    const { line, commented } = value;\n    return (<li className={commented ? 'commented' : ''}>\n        <div className=\"item\">\n            <button className=\"comment\" onMouseDown={onToggle}>//</button>\n            <p className=\"multiline\">{line}</p>\n        </div>\n    </li>)\n};\n\nexport default function NonDraggableList({ items, multiple, onItemsChanged }) {\n\n    const [itemsVal, setItems] = useState(items);\n\n    const onItemToggle = (id) => () => {\n        const result = itemsVal.map((item) => ({ ...item, commented: selectMapper[multiple](item, id) }));\n        setItems(result);\n        console.log(result)\n        onItemsChanged(result);\n    }\n\n    return (\n        <ul className={`undraggable ${multiple && 'multiple'}`}>\n            {itemsVal.map(item => (\n                <UngraggableItem key={`item-${item.id}`} value={item} onToggle={onItemToggle(item.id)} />))}\n        </ul>\n    );\n}\n","import React from 'react';\n\nexport default function Result(links, text) {\n\n    return (\n        <>\n            <p>Верно!</p>\n            <p>{text}</p>\n            {/* {links?.map(({ text: msg, link }) => (<a href={link}>{msg}</a>))} */}\n        </>\n    );\n}\n","import DraggableList from './DraggableList'\nimport NonDraggableList from './NonDraggableList'\nimport Result from './Result'\nimport React, { useState, useEffect } from 'react';\nimport {url} from './utils';\n\nconst listPresenter = {\n  true: (props) => <DraggableList {...props}/>,\n  false: (props) => <NonDraggableList {...props}/>,\n}\n\nexport default function App(question) {\n\n  const {\n    poll,\n    description,\n    blocks, \n    multiple,\n    sortable,\n    id\n  } = question;\n\n  const [result, setResult] = useState(undefined);\n\n  const [incorrect, setIncorrect] = useState(false);\n\n  const onSubmit = async () => {\n\n    const rawResponse = await fetch(url + '/result/' + poll, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ \n        question: id, \n        lines: itemsVal.filter(block => !block.commented).map(block => block.id)\n      })\n    });\n    const content = await rawResponse.text();\n\n    setResult(content);\n\n    setIncorrect(!Boolean(content))\n  }\n\n  const onNext = () => {\n    window.location.reload();\n  }\n\n  const items = multiple \n    ? blocks.map(block => ({ ...block, commented: Math.random() < 0.5 }))\n    : blocks.map(block => ({ ...block, commented: false }))\n\n\n  const [itemsVal, setItems] = useState(items);\n\n  useEffect(() => {\n    document.title = \"Code Puzzle\"\n }, []);\n\n const list = listPresenter[sortable]({items, onItemsChanged: setItems, multiple});\n\n  return (\n    <>\n      <p className=\"description multiline\">{description}</p>\n      <button className=\"next\" onClick={onNext}>Дальше</button>\n      <button className=\"submit\" onClick={onSubmit}>Submit</button>\n      <div className={`alert ${incorrect ? 'alert-shown' : 'alert-hidden'}`}\n          onTransitionEnd={() => {\n            console.log('onTransitionEnd');\n            setIncorrect(false)}}>\n        <strong>Извините. Не принято!</strong>\n      </div>   \n\n      {\n        list\n      }\n      {\n        Boolean(result) && <div className=\"result\">\n          <button onClick={onNext}>Дальше</button>\n          <Result {...result}/>\n        </div>\n      }\n    </>)\n}","import { render } from 'react-dom'\nimport React, { useState } from 'react'\nimport './styles.css'\nimport App from './App'\nimport {url} from './utils'\n\nexport const swapInArray = (arr, idx1, idx2) => {\n  const result = [...arr];\n  [result[idx1], result[idx2]] = [arr[idx2], arr[idx1]]\n  return result;\n}\n\n(async () => {\n\n  const poll = window.location.pathname.replace('/', '');\n\n  const fetchedQuestion = await fetch(url + '/rndpoll/'+poll);\n\n  let question = await fetchedQuestion.json();\n\n  question = {...question, poll};\n\n  render(<App {...question}/>, document.getElementById('root'))\n\n})();"],"sourceRoot":""}