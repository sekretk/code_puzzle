{"version":3,"sources":["App.js","index.js"],"names":["fn","order","down","originalIndex","curIndex","y","index","scale","zIndex","shadow","immediate","n","indexOf","ItemElement","_ref","key","_ref$item","item","name","commented","onToggle","react_default","a","createElement","className","onMouseDown","e","stopPropagation","console","log","DraggableList","_ref2","items","_useState","useState","map","x","id","Object","objectSpread","_useState2","slicedToArray","itemsVal","setItems","useRef","_","_useSprings","useSprings","length","current","_useSprings2","springs","setSprings","bind","useGesture","_ref3","args","delta","curRow","clamp","Math","round","newOrder","swap","onItemToggle","i","style","height","_ref4","web","div","assign","boxShadow","interpolate","s","concat","transform","App_ItemElement","render","document","getElementById"],"mappings":"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","file":"static/js/main.81278694.chunk.js","sourcesContent":["import React, { useRef, useState } from 'react'\nimport clamp from 'lodash-es/clamp'\nimport swap from 'lodash-move'\nimport { useGesture } from 'react-use-gesture'\nimport { useSprings, animated, interpolate } from 'react-spring'\n\n// Returns fitting styles for dragged/idle items\nconst fn = (order, down, originalIndex, curIndex, y) => (index) =>\n  down && index === originalIndex\n    ? { y: curIndex * 100 + y, scale: 1.1, zIndex: '1', shadow: 15, immediate: (n) => n === 'y' || n === 'zIndex' }\n    : { y: order.indexOf(index) * 100, scale: 1, zIndex: '0', shadow: 1, immediate: false }\n\nconst ItemElement = ({ key, item: { name, commented }, onToggle }) => {\n  const onToggleClick = (e) => {\n    e.stopPropagation()\n    console.log()\n    onToggle()\n  }\n\n  return (\n    <div className=\"item\">\n      <button onMouseDown={onToggleClick}>togglecomment</button>\n      <p className={commented ? 'commented' : ''}>{name}</p>\n    </div>\n  )\n}\nexport default function DraggableList({ items }) {\n  const [itemsVal, setItems] = useState(items.map((x, id) => ({ ...x, id })))\n  const order = useRef(items.map((_, index) => index)) // Store indicies as a local ref, this represents the item order\n  const [springs, setSprings] = useSprings(itemsVal.length, fn(order.current)) // Create springs, each corresponds to an item, controlling its transform, scale, etc.\n  const bind = useGesture(({ args: [originalIndex], down, delta: [, y] }) => {\n    const curIndex = order.current.indexOf(originalIndex)\n    const curRow = clamp(Math.round((curIndex * 100 + y) / 100), 0, itemsVal.length - 1)\n    const newOrder = swap(order.current, curIndex, curRow)\n    setSprings(fn(newOrder, down, originalIndex, curIndex, y)) // Feed springs new style data, they'll animate the view without causing a single render\n    if (!down) order.current = newOrder\n  })\n\n  const onItemToggle = (i) => () => {\n    console.log('to toggle', i)\n    setItems(itemsVal.map((item) => ({ ...item, commented: item.id === i ? !item.commented : item.commented })))\n  }\n\n  return (\n    <div>\n      <div className=\"content\" style={{ height: itemsVal.length * 50 }}>\n        {springs.map(({ zIndex, shadow, y, scale }, i) => (\n          <animated.div\n            {...bind(i)}\n            key={i}\n            style={{\n              zIndex,\n              boxShadow: shadow.interpolate((s) => `rgba(0, 0, 0, 0.15) 0px ${s}px ${2 * s}px 0px`),\n              transform: interpolate([y, scale], (y, s) => `translate3d(0,${y}px,0) scale(${s})`)\n            }}>\n            <ItemElement item={itemsVal[i]} onToggle={onItemToggle(i)} />\n          </animated.div>\n        ))}\n      </div>\n    </div>\n  )\n}\n","import { render } from 'react-dom'\nimport React from 'react'\nimport './styles.css'\nimport DraggableList from './App'\n\nconst items = [\n  { name: 'compact', commented: false },\n  { name: 'takeWhile', commented: false },\n  { name: 'filter', commented: true },\n  { name: 'skip(1)', commented: false },\n  { name: 'shareReply', commented: true }\n]\n\nrender(<DraggableList items={items} />, document.getElementById('root'))\n"],"sourceRoot":""}